[{"/app/src/index.js":"1","/app/src/reportWebVitals.js":"2","/app/src/serviceWorkerRegistration.js":"3","/app/src/App.js":"4","/app/src/components/Lobby.js":"5","/app/src/context/game.js":"6","/app/src/context/socket.js":"7","/app/src/components/SwipeCard.js":"8","/app/src/components/Home.js":"9"},{"size":818,"mtime":1611925070721,"results":"10","hashOfConfig":"11"},{"size":364,"mtime":1611925070721,"results":"12","hashOfConfig":"11"},{"size":5064,"mtime":1611925070721,"results":"13","hashOfConfig":"11"},{"size":1371,"mtime":1613686933338,"results":"14","hashOfConfig":"11"},{"size":1828,"mtime":1613686933342,"results":"15","hashOfConfig":"11"},{"size":161,"mtime":1612134066970,"results":"16","hashOfConfig":"11"},{"size":168,"mtime":1611925070721,"results":"17","hashOfConfig":"11"},{"size":4659,"mtime":1613780535000,"results":"18","hashOfConfig":"11"},{"size":2292,"mtime":1613686902822,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"emjnck",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"22"},"/app/src/index.js",[],["41","42"],"/app/src/reportWebVitals.js",[],"/app/src/serviceWorkerRegistration.js",[],"/app/src/App.js",[],"/app/src/components/Lobby.js",["43"],"import React, { useState } from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button';\nimport { useParams } from \"react-router-dom\";\nimport { useSocket } from '../context/socket';\nimport { useLocation, useHistory } from 'react-router-dom';\n\n\n\nexport default function Lobby() {\n\n    const location = useLocation();\n    const history = useHistory();\n\n    const { id } = useParams();\n    const { socket } = useSocket();\n\n    const [players, setPlayers] = useState(location.state.players.players);\n    const [admin, setAdmin] = useState(location.state.admin);\n\n    socket.on(\"join_room\", (response) => {\n        setPlayers(response.room.players);\n      });\n\n    socket.on(\"game_started\", (response) => {\n        history.push({pathname: `/game/${id}`, state: { movies: response.movies }});\n    })\n\n    function startGame() {\n        socket.emit('start_game', id);\n    }\n    \n    return (\n        <Grid container direction='column' justify='center' spacing={3} style={{paddingTop: 150}}>\n            <Grid item>\n                <Typography variant=\"h6\" color=\"initial\">Room id: {id}</Typography>\n            </Grid>\n            <Grid item>\n                { admin ? \n                    (<Button variant=\"contained\" fullWidth={true} color=\"primary\" onClick={startGame}>\n                        Start\n                    </Button>) :\n                    (<Typography variant=\"body1\" color=\"initial\">Wait game to start</Typography>)\n                }\n                \n            </Grid>\n            <Grid item>\n                {\n                    Object.keys(players).map((key, index) => ( \n                        <p key={index}>{players[key]}</p> \n                      ))\n                }\n            </Grid>\n        </Grid>\n    )\n}\n","/app/src/context/game.js",[],"/app/src/context/socket.js",[],"/app/src/components/SwipeCard.js",["44","45","46","47","48"],"/app/src/components/Home.js",["49"],"import React, { useState } from 'react'\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { io } from 'socket.io-client';\nimport { useHistory } from 'react-router-dom';\nimport { useSocket } from '../context/socket';\nimport { Typography } from '@material-ui/core';\n\n\nexport default function Home() {\n    const { socket } = useSocket();\n    \n    const [roomId, setRoomId] = useState('');\n    const [hostName, setHostName] = useState('');\n    const [name, setName] = useState('');\n\n    const history = useHistory();\n  \n    function createRoom(event) {\n      socket.emit('create', hostName, (response) => {\n        history.push({pathname: `/lobby/${response[0]}`, state: { players: response[1], admin: response[2] }})\n      })\n    }\n  \n    function connectToRoom() {\n      socket.emit('connect_to_room', roomId, name, (response) => {\n        history.push({pathname: `/lobby/${roomId}`, state: { players: response[0], admin: response[1] }})\n      })\n    }\n  \n    return (\n    <Grid container direction='column' justify='center' spacing={3} style={{paddingTop: 150}}>\n      <Grid item>\n        <TextField fullWidth={true} label=\"Host Name\" value={hostName} onChange={e => { setHostName(e.target.value) }} />\n      </Grid>\n      <Grid item>\n        <Button fullWidth={true} variant=\"contained\" color=\"primary\" onClick={createRoom}>\n            Create room\n        </Button>\n      </Grid>\n      <Grid item >\n        <Typography variant='body1' align='center'>---or join room---</Typography>\n      </Grid>\n      <Grid item container direction='column' spacing={2}>\n        <Grid item>\n          <TextField fullWidth={true} label=\"Room ID\" value={roomId} onChange={e => { setRoomId(e.target.value.toUpperCase()) }} />\n        </Grid>\n        <Grid item>\n          <TextField fullWidth={true} label=\"Your Name\" value={name} onChange={e => { setName(e.target.value) }} />\n        </Grid>\n        <Grid item>\n          <Button variant=\"contained\" fullWidth={true} color=\"secondary\" onClick={connectToRoom}>\n              Connect\n          </Button> \n        </Grid>\n      </Grid>\n      {/* <Grid item>\n        <div>Number of players in room: {numberOfPlayers}</div>\n      </Grid> */}\n    </Grid>\n    );\n}\n",{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":20,"column":19,"nodeType":"56","messageId":"57","endLine":20,"endColumn":27},{"ruleId":"54","severity":1,"message":"58","line":1,"column":27,"nodeType":"56","messageId":"57","endLine":1,"endColumn":33},{"ruleId":"54","severity":1,"message":"59","line":8,"column":8,"nodeType":"56","messageId":"57","endLine":8,"endColumn":18},{"ruleId":"54","severity":1,"message":"60","line":10,"column":8,"nodeType":"56","messageId":"57","endLine":10,"endColumn":12},{"ruleId":"54","severity":1,"message":"61","line":21,"column":24,"nodeType":"56","messageId":"57","endLine":21,"endColumn":37},{"ruleId":"62","severity":1,"message":"63","line":24,"column":99,"nodeType":"64","endLine":24,"endColumn":101,"suggestions":"65"},{"ruleId":"54","severity":1,"message":"66","line":5,"column":10,"nodeType":"56","messageId":"57","endLine":5,"endColumn":12},"no-native-reassign",["67"],"no-negated-in-lhs",["68"],"no-unused-vars","'setAdmin' is assigned a value but never used.","Identifier","unusedVar","'useRef' is defined but never used.","'Typography' is defined but never used.","'Link' is defined but never used.","'setGameMovies' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useMemo has a missing dependency: 'gameMovies.length'. Either include it or remove the dependency array.","ArrayExpression",["69"],"'io' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"70","fix":"71"},"Update the dependencies array to be: [gameMovies.length]",{"range":"72","text":"73"},[886,888],"[gameMovies.length]"]