[{"D:\\Projects\\movie_swiper\\movie_swiper\\src\\index.js":"1","D:\\Projects\\movie_swiper\\movie_swiper\\src\\serviceWorkerRegistration.js":"2","D:\\Projects\\movie_swiper\\movie_swiper\\src\\reportWebVitals.js":"3","D:\\Projects\\movie_swiper\\movie_swiper\\src\\App.js":"4","D:\\Projects\\movie_swiper\\movie_swiper\\src\\components\\SwipeCard.js":"5","D:\\Projects\\movie_swiper\\movie_swiper\\src\\components\\IconsBar.js":"6","D:\\Projects\\movie_swiper\\movie_swiper\\src\\firebase\\firebase.js":"7","D:\\Projects\\movie_swiper\\movie_swiper\\src\\components\\Test.js":"8","D:\\Projects\\movie_swiper\\movie_swiper\\src\\context\\socket.js":"9","D:\\Projects\\movie_swiper\\movie_swiper\\src\\components\\Home.js":"10","D:\\Projects\\movie_swiper\\movie_swiper\\src\\components\\Lobby.js":"11","D:\\Projects\\movie_swiper\\movie_swiper\\src\\context\\game.js":"12"},{"size":818,"mtime":499162500000,"results":"13","hashOfConfig":"14"},{"size":5064,"mtime":499162500000,"results":"15","hashOfConfig":"14"},{"size":364,"mtime":499162500000,"results":"16","hashOfConfig":"14"},{"size":1376,"mtime":1612135171331,"results":"17","hashOfConfig":"14"},{"size":4508,"mtime":1612470702617,"results":"18","hashOfConfig":"14"},{"size":391,"mtime":1610660428312,"results":"19","hashOfConfig":"14"},{"size":535,"mtime":1610738730925,"results":"20","hashOfConfig":"14"},{"size":285,"mtime":1611778718604,"results":"21","hashOfConfig":"14"},{"size":175,"mtime":1611779422360,"results":"22","hashOfConfig":"14"},{"size":2372,"mtime":1612470784934,"results":"23","hashOfConfig":"14"},{"size":1885,"mtime":1612472872776,"results":"24","hashOfConfig":"14"},{"size":167,"mtime":1612134110025,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"jvopd2",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"D:\\Projects\\movie_swiper\\movie_swiper\\src\\index.js",[],["57","58"],"D:\\Projects\\movie_swiper\\movie_swiper\\src\\serviceWorkerRegistration.js",[],"D:\\Projects\\movie_swiper\\movie_swiper\\src\\reportWebVitals.js",[],"D:\\Projects\\movie_swiper\\movie_swiper\\src\\App.js",[],"D:\\Projects\\movie_swiper\\movie_swiper\\src\\components\\SwipeCard.js",["59","60","61"],"import React, { useState, useRef, useMemo } from 'react';\r\nimport TinderCard from 'react-tinder-card';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport '../styles/SwipeCard.css';\r\nimport { useParams, useLocation } from \"react-router-dom\";\r\nimport { useSocket } from '../context/socket';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Carousel from 'react-material-ui-carousel';\r\n\r\nconst alreadyRemoved = []\r\nexport default function SwipeCard() {\r\n\r\n    const location = useLocation();\r\n\r\n    const { id } = useParams();\r\n    const { socket } = useSocket();\r\n\r\n    const [gameMovies, setGameMovies] = useState(location.state.movies);\r\n    const [matchedMovies, setMatchedMovies] = useState([]);\r\n\r\n    const childRefs = useMemo(() => Array(gameMovies.length).fill(0).map(i => React.createRef()), [])\r\n\r\n    function swiped(direction, movieTitle) {\r\n        // console.log('removing: ' + movieTitle)\r\n        alreadyRemoved.push(movieTitle)\r\n        if (direction === 'right') {\r\n            socket.emit('right_swipe', {\"room_id\": id, \"movie_title\": movieTitle}, (response) => {\r\n                // console.log(response)\r\n                setMatchedMovies(response[1])\r\n                // console.log(matchedMovies)\r\n              })\r\n        }\r\n      }\r\n    // function onSwipe(direction, movieTitle) {\r\n    //     if (direction === 'right') {\r\n    //         socket.emit('right swipe', {\"room_id\": id, \"movie_title\": movieTitle}, (response) => {\r\n    //             console.log(response)\r\n    //           })\r\n    //     }\r\n    //   }\r\n\r\n    function swipe(direction) {\r\n        const cardsLeft = gameMovies.filter(movie => !alreadyRemoved.includes(movie.name))\r\n        if (cardsLeft.length) {\r\n            const toBeRemoved = cardsLeft[cardsLeft.length - 1].name // Find the card object to be removed\r\n            const index = gameMovies.map(movie => movie.name).indexOf(toBeRemoved) // Find the index of which to make the reference to\r\n            alreadyRemoved.push(toBeRemoved) // Make sure the next card gets removed next time if this card do not have time to exit the screen\r\n            childRefs[index].current.swipe(direction) // Swipe the card!\r\n        }\r\n    }\r\n\r\n    socket.on(\"check_match\", (response) => {\r\n        alert(response);\r\n        console.log(response);\r\n        setMatchedMovies(response.matched_movies);\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            {/* <Typography variant=\"h4\" color=\"initial\" align='center'>Tinder cards</Typography> */}\r\n            <Typography variant=\"h4\" color=\"initial\" align='center'>ID: {id}</Typography>\r\n            <Grid container justifyContent='center' justify='center'>\r\n                {gameMovies.map((movie, index) => (\r\n                    <TinderCard\r\n                    className='swipe'\r\n                    ref={childRefs[index]}\r\n                    key={movie.name}\r\n                    onSwipe={(direction) => swiped(direction, movie.name)}\r\n                    preventSwipe={['up', 'down']}>\r\n                        <div \r\n                        style={{ backgroundImage: `url(${movie.poster_src})` }}\r\n                        className='card'>\r\n                            {/* <h3>{movie.name}</h3> */}\r\n                        </div>\r\n                        {/* <div>\r\n                            <h3>{movie.description}</h3>  \r\n                        </div> */}\r\n                    </TinderCard>\r\n                ))}  \r\n            <div className='bottom'>\r\n                <div className='buttons'>\r\n                    <Button variant=\"contained\" color=\"default\" onClick={() => swipe('left')}>\r\n                    Left\r\n                    </Button>\r\n                    <Button variant=\"contained\" color=\"default\" onClick={() => swipe('right')}>\r\n                    Right\r\n                    </Button>\r\n                </div>\r\n                 {/* <div className='movies'> */}\r\n                 <Carousel animation='slide' autoPlay={false}>\r\n                    {matchedMovies.length && matchedMovies.map((movie, index) => (\r\n                            <>\r\n                            <div className='movie'>\r\n                                {movie}\r\n                                <p>Description</p>\r\n                            </div>\r\n                            </>\r\n                        ))}\r\n                </Carousel>  \r\n                {/* </div> */}\r\n            </div>\r\n            </Grid>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","D:\\Projects\\movie_swiper\\movie_swiper\\src\\components\\IconsBar.js",[],["62","63"],"D:\\Projects\\movie_swiper\\movie_swiper\\src\\firebase\\firebase.js",[],["64","65"],"D:\\Projects\\movie_swiper\\movie_swiper\\src\\components\\Test.js",[],["66","67"],"D:\\Projects\\movie_swiper\\movie_swiper\\src\\context\\socket.js",[],"D:\\Projects\\movie_swiper\\movie_swiper\\src\\components\\Home.js",["68"],"import React, { useState } from 'react'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { io } from 'socket.io-client';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useSocket } from '../context/socket';\r\nimport { Typography } from '@material-ui/core';\r\n\r\n\r\nexport default function Home() {\r\n    const { socket } = useSocket();\r\n    \r\n    const [roomId, setRoomId] = useState('');\r\n    const [hostName, setHostName] = useState('');\r\n    const [name, setName] = useState('');\r\n\r\n    const history = useHistory();\r\n  \r\n    function createRoom(event) {\r\n      socket.emit('create', hostName, (response) => {\r\n        history.push({pathname: `/lobby/${response[0]}`, state: { players: response[1], admin: response[2] }})\r\n      })\r\n    }\r\n  \r\n    function connectToRoom() {\r\n      socket.emit('connect_to_room', roomId, name, (response) => {\r\n        console.log(response)\r\n        history.push({pathname: `/lobby/${roomId}`, state: { players: response[0], admin: response[1] }})\r\n      })\r\n    }\r\n  \r\n    return (\r\n    <Grid container direction='column' justify='center' spacing={3} style={{paddingTop: 150}}>\r\n      <Grid item>\r\n        <TextField fullWidth={true} label=\"Host Name\" value={hostName} onChange={e => { setHostName(e.target.value) }} />\r\n      </Grid>\r\n      <Grid item>\r\n        <Button fullWidth={true} variant=\"contained\" color=\"primary\" onClick={createRoom}>\r\n            Create room\r\n        </Button>\r\n      </Grid>\r\n      <Grid item >\r\n        <Typography variant='body1' align='center'>---or join room---</Typography>\r\n      </Grid>\r\n      <Grid item container direction='column' spacing={2}>\r\n        <Grid item>\r\n          <TextField fullWidth={true} label=\"Room ID\" value={roomId} onChange={e => { setRoomId(e.target.value) }} />\r\n        </Grid>\r\n        <Grid item>\r\n          <TextField fullWidth={true} label=\"Your Name\" value={name} onChange={e => { setName(e.target.value) }} />\r\n        </Grid>\r\n        <Grid item>\r\n          <Button variant=\"contained\" fullWidth={true} color=\"secondary\" onClick={connectToRoom}>\r\n              Connect\r\n          </Button> \r\n        </Grid>\r\n      </Grid>\r\n      {/* <Grid item>\r\n        <div>Number of players in room: {numberOfPlayers}</div>\r\n      </Grid> */}\r\n    </Grid>\r\n    );\r\n}\r\n","D:\\Projects\\movie_swiper\\movie_swiper\\src\\components\\Lobby.js",["69"],"import React, { useState } from 'react'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Button from '@material-ui/core/Button';\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useSocket } from '../context/socket';\r\nimport { useLocation, useHistory } from 'react-router-dom';\r\n\r\n\r\n\r\nexport default function Lobby() {\r\n\r\n    const location = useLocation();\r\n    const history = useHistory();\r\n\r\n    const { id } = useParams();\r\n    const { socket } = useSocket();\r\n\r\n    const [players, setPlayers] = useState(location.state.players.players);\r\n    const [admin, setAdmin] = useState(location.state.admin);\r\n\r\n    socket.on(\"join_room\", (response) => {\r\n        setPlayers(response.room.players);\r\n      });\r\n\r\n    socket.on(\"game_started\", (response) => {\r\n        history.push({pathname: `/game/${id}`, state: { movies: response.movies }});\r\n    })\r\n\r\n    function startGame() {\r\n        socket.emit('start_game', id);\r\n    }\r\n    \r\n    return (\r\n        <Grid container direction='column' justify='center' spacing={3} style={{paddingTop: 150}}>\r\n            <Grid item>\r\n                <Typography variant=\"h6\" color=\"initial\">Room id: {id}</Typography>\r\n            </Grid>\r\n            <Grid item>\r\n                { admin ? \r\n                    (<Button variant=\"contained\" fullWidth={true} color=\"primary\" onClick={startGame}>\r\n                        Start\r\n                    </Button>) :\r\n                    (<Typography variant=\"body1\" color=\"initial\">Wait game to start</Typography>)\r\n                }\r\n                \r\n            </Grid>\r\n            <Grid item>\r\n                {\r\n                    Object.keys(players).map((key, index) => ( \r\n                        <p key={index}>{players[key]}</p> \r\n                      ))\r\n                }\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n","D:\\Projects\\movie_swiper\\movie_swiper\\src\\context\\game.js",[],{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":1,"column":27,"nodeType":"76","messageId":"77","endLine":1,"endColumn":33},{"ruleId":"74","severity":1,"message":"78","line":19,"column":24,"nodeType":"76","messageId":"77","endLine":19,"endColumn":37},{"ruleId":"79","severity":1,"message":"80","line":22,"column":99,"nodeType":"81","endLine":22,"endColumn":101,"suggestions":"82"},{"ruleId":"70","replacedBy":"83"},{"ruleId":"72","replacedBy":"84"},{"ruleId":"70","replacedBy":"85"},{"ruleId":"72","replacedBy":"86"},{"ruleId":"70","replacedBy":"87"},{"ruleId":"72","replacedBy":"88"},{"ruleId":"74","severity":1,"message":"89","line":5,"column":10,"nodeType":"76","messageId":"77","endLine":5,"endColumn":12},{"ruleId":"74","severity":1,"message":"90","line":20,"column":19,"nodeType":"76","messageId":"77","endLine":20,"endColumn":27},"no-native-reassign",["91"],"no-negated-in-lhs",["92"],"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'setGameMovies' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useMemo has a missing dependency: 'gameMovies.length'. Either include it or remove the dependency array.","ArrayExpression",["93"],["91"],["92"],["91"],["92"],["91"],["92"],"'io' is defined but never used.","'setAdmin' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"94","fix":"95"},"Update the dependencies array to be: [gameMovies.length]",{"range":"96","text":"97"},[863,865],"[gameMovies.length]"]