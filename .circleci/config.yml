version: 2.1

executors:
  docker-executor:
    docker:
      - image: docker:19.03.12
        auth:
          username: $DOCKER_HUB_USER
          password: $DOCKER_HUB_PASSWORD
  docker-ansible-executor:
    docker:
      - image: alpine:3.12
        auth:
          username: $DOCKER_HUB_USER
          password: $DOCKER_HUB_PASSWORD  

jobs:
  build-front:
    executor: docker-executor
    steps:
      - checkout
      - setup_remote_docker:
          version: 19.03.12
      - run: 
          name: Build Front and Push it to Docker Hub 
          command: |
            echo $DOCKER_HUB_PASSWORD
            echo $DOCKER_HUB_PASSWORD | docker login -u $DOCKER_HUB_USER --password-stdin
            ls -la
            docker build -t ommzzz/projects:movie-swiper-front-$CIRCLE_SHA1 -f ./.circleci/front/Dockerfile . 
            docker push ommzzz/projects:movie-swiper-front-$CIRCLE_SHA1

  build-back:
    executor: docker-executor
    steps:
      - checkout
      - setup_remote_docker:
          version: 19.03.12
      - run:
          name: Build Back and Push it to Docker Hub
          command: |
            echo $DOCKER_HUB_PASSWORD | docker login -u $DOCKER_HUB_USER --password-stdin
            docker build -t ommzzz/projects:movie-swiper-back-$CIRCLE_SHA1 -f ./.circleci/back/Dockerfile ./server
            docker push ommzzz/projects:movie-swiper-back-$CIRCLE_SHA1 

  deploy-stage:
    executor: docker-ansible-executor
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - "8b:e3:65:42:f0:ff:74:56:e4:5b:a4:ff:f1:ab:d9:b5"
      - run:
          name: Deploy with Ansible to Dev [ugol.space]
          command: |
            ls -la
            # cat ~/.ssh/config
            apk add ansible openssh-client
            mkdir -p ~/.ssh && chmod 700 ~/.ssh
            cd .circleci/ansible
            ls -la
            ansible-playbook -i hosts.yaml deploy-docker-compose-play.yaml -e "\
            deploy_host=ugol \
            deploy_host_domain=ugol.space \
            commit_hash=$CIRCLE_SHA1 \
            docker_hub_user_var=$DOCKER_HUB_USER \
            docker_hub_pass_var=$DOCKER_HUB_PASSWORD \
            docker_compose_template_path=/docker-compose.j2"

          environment:
             ANSIBLE_HOST_KEY_CHECKING: 'False'
      
  # deploy-prod:
  #   executor: docker-ansible-executor
  #   steps:
  #     - checkout
  #     - add_ssh_keys:
  #         fingerprints:
  #           - "8b:e3:65:42:f0:ff:74:56:e4:5b:a4:ff:f1:ab:d9:b5"
  #     - run:
  #         name: Deploy with Ansible to Prod [fitness01]
  #         command: |
  #           cat ~/.ssh/config
  #           apk add ansible openssh-client
  #           mkdir -p ~/.ssh && chmod 700 ~/.ssh
  #           cd ./deploy/ansible
  #           ansible-playbook -i hosts.yaml deploy-docker-compose-play.yaml -e "\
  #           deploy_host=ugol \
  #           deploy_host_domain=ugol.space \
  #           commit_hash=$CIRCLE_SHA1 \
  #           docker_hub_user_var=$DOCKER_HUB_USER \
  #           docker_hub_pass_var=$DOCKER_HUB_PASSWORD \
  #           docker_compose_template_path=/docker-compose.j2"

  #         environment:
  #             ANSIBLE_HOST_KEY_CHECKING: 'False'


workflows:
  version: 2
  build_and_push:
    jobs:
      # - build-front:
      #     context:
      #       - movie-swiper-CI-CD-context
      #     filters:
      #       branches:
      #         only:
      #         - ci_tests

      # - build-back:
      #     requires:
      #       - build-front
      #     context:
      #       - movie-swiper-CI-CD-context
      #     filters:
      #       branches:
      #         only:
      #         - ci_tests

      - deploy-stage:
          # requires:
          #   - build-back
          context:
            - movie-swiper-CI-CD-context
          filters:
            branches:
              only:
              - ci_tests

      # - deploy-prod-approval:
      #     requires:
      #       - deploy-stage
      #     type: approval

      # - deploy-prod:
      #     requires:
      #       - deploy-prod-approval
      #     context:
      #       - fitness-app-CI-CD-context
      #     filters:
      #       branches:
      #         only:
      #         - master